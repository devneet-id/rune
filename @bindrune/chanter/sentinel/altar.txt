<?php
/* RUNE 1.0.10 | Created By @anwarachilles */

function rune__construct_68686d6a1e81a(){return 'PD9waHAKLyoge3tDT1BZUklHSFR9fSAqLwp7e1BIUH19Cj8+CjwhRE9DVFlQRSBodG1sPgo8aHRtbD4KPGhlYWQ+Cnt7SFRNTC1IRUFEfX0KICA8c3R5bGU+Cnt7Q1NTfX0KICA8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PgogIHt7SFRNTH19CiAgPHNjcmlwdD4Ke3tKU319CiAgPC9zY3JpcHQ+CjwvYm9keT4KPC9odG1sPg==';}

function rune__prefixing_68686d6a1e81a($construct,$prefix,$data){return str_replace("{{".strtoupper($prefix)."}}",$data,$construct);}

function rune__encryption_68686d6a1e81a($data,$state=1){$TYPE='base64';if($state){if($TYPE=='base64'){return base64_encode($data);}if($TYPE=='gzip'){return gzencode($data);}}else{if($TYPE=='base64'){return base64_decode($data);}if($TYPE=='gzip'){return gzdecode($data);}}}

function rune__HTML_HEAD_68686d6a1e81a(){return 'PHRpdGxlPlJVTkUgLSBBTFRBUjwvdGl0bGU+DQoNCjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MC4zIj4NCg0KPD9waHAgaWYgKHJvdXRlcignYmluZHJ1bmUnKSk6ID8+DQo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvYWNlLzEuNC4xNC9hY2UuanMiPjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2xlYWRlci1saW5lLzEuMC43L2xlYWRlci1saW5lLm1pbi5qcyI+PC9zY3JpcHQ+DQo8P3BocCBlbmRpZiA/Pg0KDQo8P3BocCBpZiAocm91dGVyKCd3ZWJraXQnKSk6ID8+DQo8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2hpZ2hsaWdodC5qcy8xMS43LjAvc3R5bGVzL2F0b20tb25lLWRhcmsubWluLmNzcyI+DQo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaGlnaGxpZ2h0LmpzLzExLjQuMC9oaWdobGlnaHQubWluLmpzIj48L3NjcmlwdD4NCjw/cGhwIGVuZGlmID8+';}

function rune__HTML_68686d6a1e81a(){return '';}

function rune__CSS_68686d6a1e81a(){return '';}

function rune__JS_68686d6a1e81a(){return '';}

function rune__PHP_68686d6a1e81a(){return 'LyoqDQogKiBUaGUgY29yZSBjbGFzcyBmb3IgTmlydmFuYS4NCiAqDQogKiBAY2xhc3MgTmlydmFuYUNvcmUNCiAqLw0KY2xhc3MgTmlydmFuYUNvcmUgew0KDQogIHB1YmxpYyBzdGF0aWMgJHZlcnNpb24gPSAxLjI7DQogIA0KICBwdWJsaWMgc3RhdGljICRyZXF1ZXN0ID0gIiI7DQogIA0KICBwdWJsaWMgc3RhdGljICRyb3V0ZSA9ICIiOw0KICANCiAgcHVibGljIHN0YXRpYyAkbWV0aG9kID0gW107DQoNCiAgcHVibGljIHN0YXRpYyAkaGVhZGVyID0gW107DQoNCiAgcHVibGljIHN0YXRpYyAkcmVzcG9uc2UgPSBbXTsNCg0KICBwdWJsaWMgc3RhdGljICRkYXRhID0gW107DQoNCiAgcHVibGljIHN0YXRpYyAkcmVzdCA9IFtdOw0KDQogIHB1YmxpYyBzdGF0aWMgJHN0b3JlID0gW107DQoNCiAgcHVibGljIHN0YXRpYyAkY29uZmlndXJlID0gWw0KICAgICdiYXNldXJsJz0+ICdodHRwOi8vMTI3LjAuMC4xJywNCiAgICAnc2Vzc2lvbic9PiB0cnVlDQogIF07DQoNCiAgcHVibGljIHN0YXRpYyAkc2VydmljZSA9IFtdOw0KDQogIA0KDQogIC8qKg0KICAgKiBDaGVja3MgaWYgYSBzdHJpbmcgaXMgYSB2YWxpZCBKU09OLg0KICAgKg0KICAgKiBAcGFyYW0gc3RyaW5nICRzdHJpbmcgVGhlIHN0cmluZyB0byBiZSBjaGVja2VkLg0KICAgKiBAcmV0dXJuIGJvb2wgUmV0dXJucyB0cnVlIGlmIHRoZSBzdHJpbmcgaXMgdmFsaWQgSlNPTiwgZmFsc2Ugb3RoZXJ3aXNlLg0KICAgKi8NCiAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBfaXNKc29uKCRzdHJpbmcpIHsNCiAgICBqc29uX2RlY29kZSgkc3RyaW5nKTsNCiAgICByZXR1cm4ganNvbl9sYXN0X2Vycm9yKCkgPT09IEpTT05fRVJST1JfTk9ORTsNCiAgfQ0KDQogIC8qKg0KICAgKiBTZXRzIHRoZSBzZXJ2aWNlLg0KICAgKg0KICAgKiBUaGlzIGZ1bmN0aW9uIGxvb3BzIHRocm91Z2ggdGhlICRzZXJ2aWNlIGFycmF5IGFuZCBjaGVja3MgaWYgZWFjaCBmdW5jdGlvbiBleGlzdHMuDQogICAqIElmIGEgZnVuY3Rpb24gZG9lcyBub3QgZXhpc3QsIGl0IGlzIGNhbGxlZC4NCiAgICoNCiAgICogQHRocm93cyBTb21lX0V4Y2VwdGlvbl9DbGFzcyBkZXNjcmlwdGlvbiBvZiBleGNlcHRpb24NCiAgICogQHJldHVybiB2b2lkDQogICAqLw0KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHNldHNlcnZpY2UoKSB7DQogICAgTmlydmFuYUNvcmU6OmRlZmF1bHRTZXJ2aWNlKCk7DQogICAgZm9yZWFjaCAoc2VsZjo6JHNlcnZpY2UgYXMgJG5hbWUgPT4gJGZ1bmN0KSB7DQogICAgICBpZiAoIWZ1bmN0aW9uX2V4aXN0cygkbmFtZSkpIHsNCiAgICAgICAgJGZ1bmN0KCk7DQogICAgICB9DQogICAgfQ0KICB9DQoNCiAgLyoqDQogICAqIFNldHMgdGhlIGRlZmF1bHQgc2VydmljZXMuDQogICAqDQogICAqIFRoaXMgZnVuY3Rpb24gc2V0cyB0aGUgZGVmYXVsdCBzZXJ2aWNlcyBsaWtlIGJhc2V1cmwsIGRkLCBzZWdtZW50LCByb3V0ZXIsIGZvcmNlX2h0dHBzLCBhbmQgYW50aV9kZG9zLg0KICAgKg0KICAgKiBAdGhyb3dzIE5vbmUNCiAgICogQHJldHVybiB2b2lkDQogICAqLw0KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGRlZmF1bHRTZXJ2aWNlKCkgew0KICAgIE5pcnZhbmFDb3JlOjokc2VydmljZVsnYmFzZXVybCddID0gZnVuY3Rpb24oKSB7DQogICAgICBmdW5jdGlvbiBiYXNldXJsKCR1cmwgPSAnJykgew0KICAgICAgICByZXR1cm4gcnRyaW0oTmlydmFuYUNvcmU6OiRjb25maWd1cmVbJ2Jhc2V1cmwnXSwgJy8nKSAuICcvJyAuIGx0cmltKCR1cmwsICcvJyk7DQogICAgICB9DQogICAgfTsNCiAgICBOaXJ2YW5hQ29yZTo6JHNlcnZpY2VbJ2RkJ10gPSBmdW5jdGlvbigpIHsNCiAgICAgIGZ1bmN0aW9uIGRkKCRkYXRhKSB7DQogICAgICAgIGVjaG8gJzxwcmU+JzsgcHJpbnRfcigkZGF0YSk7IGRpZTsgZXhpdDsNCiAgICAgIH0NCiAgICB9Ow0KICAgIE5pcnZhbmFDb3JlOjokc2VydmljZVsnc2VnbWVudCddID0gZnVuY3Rpb24oKSB7DQogICAgICBmdW5jdGlvbiBzZWdtZW50KCRpbmRleCkgew0KICAgICAgICAkc2VnbWVudCA9IGV4cGxvZGUoJy8nLCBOaXJ2YW5hQ29yZTo6JHJvdXRlKTsNCiAgICAgICAgaWYgKGlzc2V0KCRzZWdtZW50WyRpbmRleF0pKSB7DQogICAgICAgICAgcmV0dXJuICRzZWdtZW50WyRpbmRleF07DQogICAgICAgIH1lbHNlIHsNCiAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9Ow0KICAgIE5pcnZhbmFDb3JlOjokc2VydmljZVsncm91dGVyJ10gPSBmdW5jdGlvbigpIHsNCiAgICAgIGZ1bmN0aW9uIHJvdXRlcigkcGFnZSwgJHN0cmljdD10cnVlKSB7DQogICAgICAgIGlmICgkc3RyaWN0KSB7DQogICAgICAgICAgaWYgKChwcmVnX3JlcGxhY2UoIi9pPVsxMl0vIiwgIiIsIE5pcnZhbmFDb3JlOjokcm91dGUpID09ICRwYWdlKSB8fCAoc2VnbWVudCgwKSA9PSAkcGFnZSkpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgIH1lbHNlIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICB9DQogICAgICAgIH1lbHNlIHsNCiAgICAgICAgICAkY3VycmVudF9yb3V0ZSA9IHN0cl9yZXBsYWNlKHBhcnNlX3VybChiYXNldXJsKCksIFBIUF9VUkxfUEFUSCksICcnLCAkX1NFUlZFUlsnUkVRVUVTVF9VUkknXSk7DQogICAgICAgICAgJGN1cnJlbnRfcm91dGUgPSBleHBsb2RlKCc/JywgJGN1cnJlbnRfcm91dGUpWzBdOw0KICAgICAgICAgICRjdXJyZW50X3JvdXRlID0gbHRyaW0oJGN1cnJlbnRfcm91dGUsICcvJyk7DQogICAgICAgICAgJGN1cnJlbnRfcm91dGUgPSBwcmVnX3JlcGxhY2UoIi9pPVsxMl0vIiwgIiIsICRjdXJyZW50X3JvdXRlKTsNCiAgICAgICAgICByZXR1cm4gKCRjdXJyZW50X3JvdXRlID09ICRwYWdlKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH07DQogICAgTmlydmFuYUNvcmU6OiRzZXJ2aWNlWydmb3JjZV9odHRwcyddID0gZnVuY3Rpb24oKSB7DQogICAgICBmdW5jdGlvbiBmb3JjZV9odHRwcygpIHsNCiAgICAgICAgaWYgKCRfU0VSVkVSWyJIVFRQUyJdICE9ICJvbiIpIHsNCiAgICAgICAgICAvLyBEYXBhdGthbiBVUkwgc2FhdCBpbmkNCiAgICAgICAgICAkdXJsID0gImh0dHBzOi8vIiAuICRfU0VSVkVSWyJIVFRQX0hPU1QiXSAuICRfU0VSVkVSWyJSRVFVRVNUX1VSSSJdOw0KICAgICAgICAgIC8vIEFsaWhrYW4ga2UgVVJMIEhUVFBTDQogICAgICAgICAgaGVhZGVyKCJMb2NhdGlvbjogJHVybCIpOw0KICAgICAgICAgIGV4aXQoKTsNCiAgICAgICAgfSANCiAgICAgIH0NCiAgICB9Ow0KICAgIE5pcnZhbmFDb3JlOjokc2VydmljZVsnYW50aV9kZG9zJ10gPSBmdW5jdGlvbigpIHsNCiAgICAgIGZ1bmN0aW9uIGFudGlfZGRvcygkdGltZSkgew0KICAgICAgICAvLyBMYWt1a2FuIHBlbmdlY2VrYW4gamlrYSBzdWRhaCBhZGEgZGF0YSBBbnRpLUREb1MNCiAgICAgICAgJGN1cnJlbnRUaW1lID0gbWljcm90aW1lKHRydWUpOw0KICAgICAgICAkc3RhcnRUaW1lID0gJF9TRVNTSU9OWydBTlRJX0RET1MnXVsndGltZSddOw0KICAgICAgICAkdGltZURpZmZNcyA9ICgkY3VycmVudFRpbWUgLSAkc3RhcnRUaW1lKSAqIDEwMDA7IC8vIEtvbnZlcnNpIGtlIG1pbGlkZXRpaw0KDQogICAgICAgIC8vIEppa2Egd2FrdHUgbWlrcm8ga3VyYW5nIGRhcmkgMTAwbXMsIHRhbXBpbGthbiBpc2kgc2Vzc2lvbg0KICAgICAgICBpZiAoKCR0aW1lRGlmZk1zIDwgJHRpbWUpICYmICgkX1NFU1NJT05bJ0FOVElfRERPUyddWydkYXRhJ10gPT0gJF9TRVJWRVJbJ1JFTU9URV9BRERSJ10pKSB7DQogICAgICAgICAgaHR0cF9yZXNwb25zZV9jb2RlKDQwNCk7DQogICAgICAgICAgZWNobyAnYmFuZ2tlIGthdSBtYWluIGRkb3MnOw0KICAgICAgICAgIGRpZTsgZXhpdDsNCiAgICAgICAgfQ0KDQogICAgICAgICRfU0VTU0lPTlsnQU5USV9ERE9TJ10gPSBbDQogICAgICAgICAgInRpbWUiID0+IG1pY3JvdGltZSh0cnVlKSwNCiAgICAgICAgICAiZGF0YSIgPT4gJF9TRVJWRVJbJ1JFTU9URV9BRERSJ10NCiAgICAgICAgXTsNCiAgICAgIH0NCiAgICB9Ow0KICAgIE5pcnZhbmFDb3JlOjokc2VydmljZVsnbm90X2ZvdW5kJ10gPSBmdW5jdGlvbigpIHsNCiAgICAgIGZ1bmN0aW9uIG5vdF9mb3VuZCgpIHsNCiAgICAgICAgaGVhZGVyKCdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nKTsNCiAgICAgICAgZWNobyBqc29uX2VuY29kZShOaXJ2YW5hQ29yZTo6JHJlc3BvbnNlLCBKU09OX1BSRVRUWV9QUklOVCB8IEpTT05fVU5FU0NBUEVEX1VOSUNPREUgfCBKU09OX1VORVNDQVBFRF9TTEFTSEVTKTsNCiAgICAgICAgZGllOw0KICAgICAgfQ0KICAgIH07DQogICAgTmlydmFuYUNvcmU6OiRzZXJ2aWNlWydpc19zaW1pbGFyX3BhdHRlcm4nXSA9IGZ1bmN0aW9uKCkgew0KICAgICAgZnVuY3Rpb24gaXNfc2ltaWxhcl9wYXR0ZXJuKCRwYXR0ZXJuLCAkcm91dGUpIHsNCiAgICAgICAgLy8gU3BsaXQgdGhlIHBhdHRlcm4gJiByb3V0ZSBpbnRvIGFycmF5cyBiYXNlZCBvbiAiLyINCiAgICAgICAgJHBhdHRlcm5QYXJ0cyA9IGV4cGxvZGUoJy8nLCB0cmltKCRwYXR0ZXJuLCAnLycpKTsNCiAgICAgICAgJHJvdXRlUGFydHMgPSBleHBsb2RlKCcvJywgdHJpbSgkcm91dGUsICcvJykpOw0KICAgICAgICAvLyBJZiB0aGUgbnVtYmVyIG9mIHNlZ21lbnRzIGlzIGRpZmZlcmVudCwgcmV0dXJuIGZhbHNlDQogICAgICAgIGlmIChjb3VudCgkcGF0dGVyblBhcnRzKSAhPT0gY291bnQoJHJvdXRlUGFydHMpKSB7DQogICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgICAgIC8vIExvb3AgdGhyb3VnaCBlYWNoIHNlZ21lbnQgYW5kIG1hdGNoDQogICAgICAgIGZvcmVhY2ggKCRwYXR0ZXJuUGFydHMgYXMgJGluZGV4ID0+ICRwYXJ0KSB7DQogICAgICAgICAgLy8gSWYgdGhlIHNlZ21lbnQgaXMgYSBkeW5hbWljIHBhcmFtZXRlciAoZS5nLiwge3NlcmlhbH0pDQogICAgICAgICAgaWYgKHByZWdfbWF0Y2goJy9eXHsuK1x9JC8nLCAkcGFydCkpIHsNCiAgICAgICAgICAgIGNvbnRpbnVlOyAvLyBDb25zaWRlciBpdCBhIG1hdGNoIGFuZCBwcm9jZWVkDQogICAgICAgICAgfQ0KICAgICAgICAgIC8vIElmIHRoZSBzZWdtZW50IGRvZXMgbm90IG1hdGNoIGV4YWN0bHksIHJldHVybiBmYWxzZQ0KICAgICAgICAgIGlmICgkcGFydCAhPT0gJHJvdXRlUGFydHNbJGluZGV4XSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gdHJ1ZTsgLy8gQWxsIHNlZ21lbnRzIG1hdGNoDQogICAgICB9DQogICAgfTsNCiAgfQ0KDQogIC8qKg0KICAgKiBTZXQgdGhlIEhUVFAgbWV0aG9kLCByb3V0ZSwgYW5kIHJlcXVlc3QgcGFyYW1ldGVycy4NCiAgICoNCiAgICogQHBhcmFtIG1peGVkICRjb25maWd1cmUgVGhlIGNvbmZpZ3VyYXRpb24gb3B0aW9ucy4NCiAgICogQHRocm93cyBTb21lX0V4Y2VwdGlvbl9DbGFzcyBUaGUgZXhjZXB0aW9uIHRoYXQgY2FuIGJlIHRocm93bi4NCiAgICogQHJldHVybiB2b2lkDQogICAqLw0KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHNldE1ldGhvZCggJGNvbmZpZ3VyZSApIHsNCiAgICBpZiAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10pIHsNCiAgICAgIHNlbGY6OiRyZXF1ZXN0ID0gJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ107DQogICAgICAkUk9VVEUgPSAiIjsNCiAgICAgIA0KICAgICAgaWYgKGlzc2V0KCRfU0VSVkVSWydRVUVSWV9TVFJJTkcnXSkpIHsNCiAgICAgICAgJFJPVVRFID0gdXJsZGVjb2RlKCRfU0VSVkVSWydRVUVSWV9TVFJJTkcnXSk7DQogICAgICB9ZWxzZSBpZiAoaXNzZXQoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10pKSB7DQogICAgICAgICRST1VURSA9IHVybGRlY29kZSgkX1NFUlZFUlsnUkVRVUVTVF9VUkknXSk7DQogICAgICB9DQogICAgICANCiAgICAgICRwYXJzZV91cmxfMiA9IHBhcnNlX3VybCgkUk9VVEUpOw0KICAgICAgaWYgKGlzc2V0KCRwYXJzZV91cmxfMlsncGF0aCddKSkgew0KICAgICAgICBzZWxmOjokcm91dGUgPSBsdHJpbSgkcGFyc2VfdXJsXzJbJ3BhdGgnXSwgJy8nKTsNCiAgICAgIH0NCiAgICAgIGlmIChzZWxmOjpfaXNKc29uKGZpbGVfZ2V0X2NvbnRlbnRzKCdwaHA6Ly9pbnB1dCcpKSkgew0KICAgICAgICBzZWxmOjokbWV0aG9kID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUpOw0KICAgICAgfWVsc2Ugew0KICAgICAgICBwYXJzZV9zdHIoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHNlbGY6OiRtZXRob2QpOw0KICAgICAgfQ0KICAgICAgDQogICAgICAkUVVFUlkgPSBsdHJpbShzdHJjaHIodXJsZGVjb2RlKCRfU0VSVkVSWydSRVFVRVNUX1VSSSddKSwgJz8nKSwgJz8nKTsNCiAgICAgIGlmIChzdHJfY29udGFpbnMoJFFVRVJZLCAnPycpKSB7DQogICAgICAgIHBhcnNlX3N0cigkUVVFUlksIHNlbGY6OiRtZXRob2QpOw0KICAgICAgfQ0KICAgICAgDQogICAgICBpZiAoY291bnQoJF9QT1NUKSE9PTApIHsNCiAgICAgICAgc2VsZjo6JG1ldGhvZCA9ICRfUE9TVDsNCiAgICAgIH0NCg0KICAgICAgaWYgKGlzc2V0KCRwYXJzZV91cmxfMlsncXVlcnknXSkpIHsNCiAgICAgICAgcGFyc2Vfc3RyKCRwYXJzZV91cmxfMlsncXVlcnknXSwgTmlydmFuYUNvcmU6OiRtZXRob2QpOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KDQogIC8qKg0KICAgKiBTZXQgdGhlIHJlc3BvbnNlIGZvciB0aGUgZ2l2ZW4gZW52aXJvbm1lbnQuDQogICAqDQogICAqIEBwYXJhbSBhcnJheSAkZW52IFRoZSBlbnZpcm9ubWVudCBhcnJheS4NCiAgICovDQogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gc2V0UmVzcG9uc2UoICRlbnYgKSB7DQogICAgJGNvbmZpZ3VyZSA9ICRlbnZbJ2NvbmZpZ3VyZSddOw0KDQogICAgc2VsZjo6ZG9TYW5pdGl6ZU1ldGhvZCgpOw0KDQogICAgaWYgKCRjb25maWd1cmVbJ2RldmVsb3BtZW50J10pIHsNCiAgICAgIHNlbGY6OiRyZXNwb25zZVsnWytdIFJlZmVycmVyJ10gPSAoIWVtcHR5KCRfU0VSVkVSWydIVFRQX1JFRkVSRVInXSkpID8gJF9TRVJWRVJbJ0hUVFBfUkVGRVJFUiddIDogJyc7DQogICAgICBzZWxmOjokcmVzcG9uc2VbJ1srXSBSZXF1ZXN0J10gPSBzZWxmOjokcmVxdWVzdDsNCiAgICAgIHNlbGY6OiRyZXNwb25zZVsnWytdIEVuZHBvaW50J10gPSBzZWxmOjokcm91dGU7DQogICAgICBzZWxmOjokcmVzcG9uc2VbJ1srXSBNZXRob2QnXSA9IHNlbGY6OiRtZXRob2Q7DQogICAgICBzZWxmOjokcmVzcG9uc2VbJ1srXSBWZXJzaW9uJ10gPSBzZWxmOjokdmVyc2lvbjsNCiAgICB9DQogICAgc2VsZjo6JHJlc3BvbnNlWydzdGF0ZSddID0gMjAwOw0KICB9DQogIA0KICAvKioNCiAgICogU2V0cyBjdXN0b20gZXJyb3IgYW5kIGV4Y2VwdGlvbiBoYW5kbGVycy4NCiAgICoNCiAgICogVGhpcyBmdW5jdGlvbiBzZXRzIGEgY3VzdG9tIGVycm9yIGhhbmRsZXIgdGhhdCBjb252ZXJ0cyBQSFAgZXJyb3JzIGludG8NCiAgICogRXJyb3JFeGNlcHRpb24sIGFuZCBhIGN1c3RvbSBleGNlcHRpb24gaGFuZGxlciB0aGF0IGZvcm1hdHMgdGhlIGV4Y2VwdGlvbg0KICAgKiBkZXRhaWxzIGludG8gYSBKU09OIHJlc3BvbnNlIGFuZCBvdXRwdXRzIGl0Lg0KICAgKg0KICAgKiBAdGhyb3dzIEVycm9yRXhjZXB0aW9uIGlmIGEgUEhQIGVycm9yIG9jY3Vycy4NCiAgICogQHJldHVybiB2b2lkDQogICAqLw0KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGVycm9ySGFuZGxlcigpIHsNCiAgICBzZXRfZXJyb3JfaGFuZGxlcihmdW5jdGlvbiAoJGVycm5vLCAkZXJyc3RyLCAkZXJyZmlsZSwgJGVycmxpbmUpIHsNCiAgICAgIHRocm93IG5ldyBFcnJvckV4Y2VwdGlvbigkZXJyc3RyLCAkZXJybm8sIDAsICRlcnJmaWxlLCAkZXJybGluZSk7DQogICAgfSk7DQogICAgDQogICAgc2V0X2V4Y2VwdGlvbl9oYW5kbGVyKGZ1bmN0aW9uICgkZXhjZXB0aW9uKSB7DQogICAgICBOaXJ2YW5hQ29yZTo6JHJlc3BvbnNlWydlcnJvciddID0gWw0KICAgICAgICAgICdzdGF0dXMnID0+ICdlcnJvcicsDQogICAgICAgICAgJ21lc3NhZ2UnID0+ICRleGNlcHRpb24tPmdldE1lc3NhZ2UoKSwNCiAgICAgICAgICAnZmlsZScgPT4gJGV4Y2VwdGlvbi0+Z2V0RmlsZSgpLA0KICAgICAgICAgICdsaW5lJyA9PiAkZXhjZXB0aW9uLT5nZXRMaW5lKCkNCiAgICAgIF07DQogICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicpOw0KICAgICAgaHR0cF9yZXNwb25zZV9jb2RlKDUwMCk7DQogICAgICBOaXJ2YW5hQ29yZTo6JHJlc3BvbnNlWydzdGF0ZSddID0gNTAwOw0KICAgICAgZWNobyBqc29uX2VuY29kZShOaXJ2YW5hQ29yZTo6JHJlc3BvbnNlLCBKU09OX1BSRVRUWV9QUklOVCB8IEpTT05fVU5FU0NBUEVEX1VOSUNPREUgfCBKU09OX1VORVNDQVBFRF9TTEFTSEVTKTsNCiAgICAgIGRpZTsNCiAgICB9KTsNCiAgfQ0KDQoNCiAgLyoqDQogICAqIEV4dHJhY3RzIHRoZSBpZCBwYXJhbWV0ZXIgZnJvbSB0aGUgZ2l2ZW4gJHBhdHRlcm4gYW5kICR2YWx1ZS4NCiAgICoNCiAgICogQHBhcmFtIHN0cmluZyAkcGF0dGVybiBUaGUgcGF0dGVybiB0byBleHRyYWN0IHRoZSBpZCBmcm9tLg0KICAgKiBAcGFyYW0gc3RyaW5nICR2YWx1ZSBUaGUgdmFsdWUgdG8gZXh0cmFjdCB0aGUgaWQgZnJvbS4NCiAgICoNCiAgICogQHJldHVybiBhcnJheXxudWxsIFRoZSBleHRyYWN0ZWQgaWQgcGFyYW1ldGVyLCBvciBudWxsIGlmIHRoZSBwYXR0ZXJuIGFuZCB2YWx1ZSBkbyBub3QgbWF0Y2guDQogICAqLw0KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGV4dHJhY3RJZCgkcGF0dGVybiwgJHZhbHVlKSB7DQogICAgLy8gU3BsaXQgcGF0dGVybiBhbmQgdmFsdWUgaW50byBhcnJheXMgYmFzZWQgb24gIi8iDQogICAgJHBhdHRlcm5QYXJ0cyA9IGV4cGxvZGUoJy8nLCB0cmltKCRwYXR0ZXJuLCAnLycpKTsNCiAgICAkdmFsdWVQYXJ0cyA9IGV4cGxvZGUoJy8nLCB0cmltKCR2YWx1ZSwgJy8nKSk7DQoNCiAgICAvLyBJZiB0aGUgbnVtYmVyIG9mIHNlZ21lbnRzIGlzIGRpZmZlcmVudCwgdGhleSBkb24ndCBtYXRjaA0KICAgIGlmIChjb3VudCgkcGF0dGVyblBhcnRzKSAhPT0gY291bnQoJHZhbHVlUGFydHMpKSB7DQogICAgICAgIHJldHVybiBudWxsOw0KICAgIH0NCg0KICAgIC8vIEluaXRpYWxpemUgYW4gYXJyYXkgdG8gc3RvcmUgZXh0cmFjdGVkIHBhcmFtZXRlcnMNCiAgICAkcGFyYW1zID0gW107DQoNCiAgICBmb3JlYWNoICgkcGF0dGVyblBhcnRzIGFzICRpbmRleCA9PiAkcGFydCkgew0KICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VnbWVudCBjb250YWlucyBhIHBhcmFtZXRlciBwbGFjZWhvbGRlciAoZS5nLiwge3BhcmFtMX0pDQogICAgICAgIGlmIChwcmVnX21hdGNoKCcvXlx7KFx3KylcfSQvJywgJHBhcnQsICRtYXRjaCkpIHsNCiAgICAgICAgICAgICRwYXJhbU5hbWUgPSAkbWF0Y2hbMV07IC8vIEV4dHJhY3QgcGFyYW1ldGVyIG5hbWUNCiAgICAgICAgICAgICRwYXJhbXNbJHBhcmFtTmFtZV0gPSAkdmFsdWVQYXJ0c1skaW5kZXhdOyAvLyBBc3NpZ24gY29ycmVzcG9uZGluZyB2YWx1ZQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgcmV0dXJuICRwYXJhbXM7DQogIH0NCg0KDQoNCg0KICAvKioNCiAgICogU2FuaXRpemVzIGFsbCB0aGUgdmFsdWVzIGluIHRoZSBgbWV0aG9kYCBhcnJheSBhbmQgc3RvcmVzIGl0IGJhY2sgaW4gdGhlIHNhbWUgYXJyYXkuDQogICAqDQogICAqIFRoaXMgbWV0aG9kIGlzIHVzZWQgdG8gc2FuaXRpemUgYWxsIHRoZSBtZXRob2QgdmFsdWVzIGluIG9uZSBnbywgaW5zdGVhZCBvZg0KICAgKiBzYW5pdGl6aW5nIGVhY2ggdmFsdWUgaW5kaXZpZHVhbGx5Lg0KICAgKg0KICAgKiBAcmV0dXJuIHZvaWQNCiAgICovDQogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gZG9TYW5pdGl6ZU1ldGhvZCgpIHsNCiAgICBmb3JlYWNoIChzZWxmOjokbWV0aG9kIGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICBzZWxmOjokbWV0aG9kWyRrZXldID0gc2VsZjo6c2FuaXRpemVNZXRob2QoJHZhbHVlKTsNCiAgICB9DQogIH0NCg0KICAvKioNCiAgICogU2FuaXRpemVzIGEgZ2l2ZW4gaW5wdXQgc3RyaW5nIHRvIHByZXZlbnQgdmFyaW91cyB0eXBlcyBvZiBhdHRhY2tzDQogICAqDQogICAqIFRoaXMgbWV0aG9kIGlzIHVzZWQgdG8gc2FuaXRpemUgYWxsIHRoZSBtZXRob2QgdmFsdWVzIGluIG9uZSBnbywgaW5zdGVhZCBvZg0KICAgKiBzYW5pdGl6aW5nIGVhY2ggdmFsdWUgaW5kaXZpZHVhbGx5LiBJdCB0cmltcyB0aGUgaW5wdXQgc3RyaW5nLCByZW1vdmVzDQogICAqIHVud2FudGVkIGNoYXJhY3RlcnMsIHByZXZlbnRzIFhTUyBieSBjb252ZXJ0aW5nIEhUTUwgY2hhcmFjdGVycyB0byBlbnRpdGllcywNCiAgICogYW5kIHJlbW92ZXMgbm9uLXByaW50YWJsZSBBU0NJSSBjaGFyYWN0ZXJzLiBJZiB0aGUgaW5wdXQgaXMgYSBudW1iZXIsIGl0DQogICAqIGNvbnZlcnRzIHRoZSBpbnB1dCB0byBhbiBpbnRlZ2VyLg0KICAgKg0KICAgKiBAcGFyYW0gc3RyaW5nICRpbnB1dCBUaGUgaW5wdXQgc3RyaW5nIHRvIHNhbml0aXplLg0KICAgKg0KICAgKiBAcmV0dXJuIHN0cmluZyBUaGUgc2FuaXRpemVkIGlucHV0IHN0cmluZy4NCiAgICovDQogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gc2FuaXRpemVNZXRob2QoJGlucHV0KSB7DQogICAgaWYgKGlzX3N0cmluZygkaW5wdXQpKSB7DQogICAgICAvLyBUcmltOiBNZW5naGFwdXMgc3Bhc2kgZWtzdHJhIGRpIGF3YWwgZGFuIGFraGlyIHN0cmluZw0KICAgICAgJGlucHV0ID0gdHJpbSgkaW5wdXQpOw0KICANCiAgICAgIC8vIE1lbmNlZ2FoIFhTUyBkZW5nYW4gbWVuZ29udmVyc2kga2FyYWt0ZXIgYmVyYmFoYXlhIGtlIGVudGl0YXMgSFRNTA0KICAgICAgLy8gJGlucHV0ID0gaHRtbHNwZWNpYWxjaGFycygkaW5wdXQsIEVOVF9RVU9URVMsICdVVEYtOCcpOw0KICANCiAgICAgIC8vIE1lbmdoYXB1cyBrYXJha3RlciBrb250cm9sIChBU0NJSSA8IDMyKSwgdGFwaSBtZW1iaWFya2FuIHNpbWJvbA0KICAgICAgJGlucHV0ID0gcHJlZ19yZXBsYWNlKCcvW1x4MDAtXHgxRlx4N0ZdLycsICcnLCAkaW5wdXQpOw0KICANCiAgICAgIHJldHVybiAkaW5wdXQ7DQogICAgfWVsc2Ugew0KICAgICAgcmV0dXJuICRpbnB1dDsNCiAgICB9DQogIH0NCg0KfQ0KDQovKioNCiAqIFRoZSBNYWluIGNsYXNzIGZvciBOaXJ2YW5hLg0KICoNCiAqIEBjbGFzcyBOaXJ2YW5hDQogKi8NCmNsYXNzIE5pcnZhbmEgew0KDQogIC8qKg0KICAgKiBTZXRzIHRoZSBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bmN0aW9uLg0KICAgKg0KICAgKiBAcGFyYW0gYXJyYXkgJGVudiBUaGUgZW52aXJvbm1lbnQgY29uZmlndXJhdGlvbi4NCiAgICogQHRocm93cyBFeGNlcHRpb24gSWYgdGhlcmUgaXMgYW4gZXJyb3IgaW4gdGhlIGNvbmZpZ3VyYXRpb24uDQogICAqIEByZXR1cm4gdm9pZA0KICAgKi8NCiAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBlbnZpcm9ubWVudCggJGVudiApIHsNCiAgICBOaXJ2YW5hQ29yZTo6JGRhdGEgPSBhcnJheV9tZXJnZShOaXJ2YW5hQ29yZTo6JGRhdGEsIChpc3NldCgkZW52WydkYXRhJ10pKSA/ICRlbnZbJ2RhdGEnXSA6IFtdKTsNCiAgICBOaXJ2YW5hQ29yZTo6JGNvbmZpZ3VyZSA9IGFycmF5X21lcmdlKE5pcnZhbmFDb3JlOjokY29uZmlndXJlLCAoaXNzZXQoJGVudlsnY29uZmlndXJlJ10pKSA/ICRlbnZbJ2NvbmZpZ3VyZSddIDogW10pOw0KICAgIE5pcnZhbmFDb3JlOjokc2VydmljZSA9IGFycmF5X21lcmdlKE5pcnZhbmFDb3JlOjokc2VydmljZSwgKGlzc2V0KCRlbnZbJ3NlcnZpY2UnXSkpID8gJGVudlsnc2VydmljZSddIDogW10pOw0KDQogICAgLy8gc2V0IHNlc3Npb24NCiAgICBpZiAoTmlydmFuYUNvcmU6OiRjb25maWd1cmVbJ3Nlc3Npb24nXSkgew0KICAgICAgc2Vzc2lvbl9zdGFydCgpOw0KICAgIH0NCg0KICAgIE5pcnZhbmFDb3JlOjpzZXRNZXRob2QoICRlbnYgKTsNCiAgICBOaXJ2YW5hQ29yZTo6c2V0UmVzcG9uc2UoICRlbnYgKTsNCiAgICBOaXJ2YW5hQ29yZTo6c2V0U2VydmljZSggJGVudiApOw0KDQogICAgLy8gc2V0IGFsaWFzZXMgaW5zdGFuY2UNCiAgICBpZiAoaXNzZXQoTmlydmFuYUNvcmU6OiRjb25maWd1cmVbJ2FsaWFzJ10pKSB7DQogICAgICBjbGFzc19hbGlhcygnTmlydmFuYScsIE5pcnZhbmFDb3JlOjokY29uZmlndXJlWydhbGlhcyddKTsNCiAgICB9DQogIH0NCg0KDQogIC8qKg0KICAgKiBQcmludHMgdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBOaXJ2YW5hIEFQSS4NCiAgICoNCiAgICogVGhlIGRvY3VtZW50YXRpb24gZGlzcGxheXMgYSBsaXN0IG9mIGFsbCB0aGUgYXZhaWxhYmxlIGVuZHBvaW50cywgYWxvbmcNCiAgICogd2l0aCB0aGVpciByZXNwZWN0aXZlIFVSTHMuDQogICAqDQogICAqIEByZXR1cm4gdm9pZA0KICAgKi8NCiAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBkb2N1bWVudGF0aW9uKCAkYXNUZXh0ID0gZmFsc2UgKSB7DQogICAgJGh0bWwgPSAnJzsNCiAgICAkaHRtbCAuPSAnPGg0IHN0eWxlPSJtYXJnaW4tYm90dG9tOjAiPk5pcnZhbmEgRG9jdW1lbnRhdGlvbjwvaDQ+JzsNCiAgICAkaHRtbCAuPSAgJzxwIHN0eWxlPSJtYXJnaW4tdG9wOjAiPlZlcnNpb24gLSAnLk5pcnZhbmFDb3JlOjokdmVyc2lvbi4nPC9wPic7DQogICAgJGh0bWwgLj0gICc8aHI+JzsNCiAgICANCiAgICBmb3JlYWNoIChOaXJ2YW5hQ29yZTo6JHJlc3QgYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICRodG1sIC49ICAnPGZpZWxkc2V0Pic7DQogICAgICAkaHRtbCAuPSAgJzxsZWdlbmQ+Jy4ka2V5Lic8L2xlZ2VuZD4nOw0KICAgICAgJGh0bWwgLj0gICc8b2wgdHlwZT0iMSI+JzsNCiAgICAgIGZvcmVhY2ggKCR2YWx1ZSBhcyAkayA9PiAkdikgew0KICAgICAgICAkaHRtbCAuPSAgIjxsaT4iLmJhc2V1cmwoJGspLiI8L2xpPiI7DQogICAgICB9DQogICAgICAkaHRtbCAuPSAgIjwvb2w+IjsNCiAgICAgICRodG1sIC49ICAnPC9maWVsZHNldD4nOw0KICAgIH0NCg0KICAgIGlmICgkYXNUZXh0KSB7DQogICAgICByZXR1cm4gJGh0bWw7DQogICAgfWVsc2Ugew0KICAgICAgZWNobyAkaHRtbDsNCiAgICAgIGRpZTsNCiAgICB9DQogIH0NCg0KICAvKioNCiAgICogUmV0cmlldmVzIHRoZSBkYXRhLg0KICAgKg0KICAgKiBAdGhyb3dzIFNvbWVfRXhjZXB0aW9uX0NsYXNzIGRlc2NyaXB0aW9uIG9mIGV4Y2VwdGlvbg0KICAgKiBAcmV0dXJuIFNvbWVfUmV0dXJuX1ZhbHVlDQogICAqLw0KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGRhdGEoICRuYW1lID0gbnVsbCwgJGRhdGEgPSBudWxsICkgew0KICAgIGlmIChlbXB0eSgkZGF0YSkpIHsNCiAgICAgIGlmIChlbXB0eSgkbmFtZSkpIHsNCiAgICAgICAgcmV0dXJuIChvYmplY3QpIE5pcnZhbmFDb3JlOjokZGF0YTsNCiAgICAgIH1lbHNlIHsNCiAgICAgICAgcmV0dXJuIChpc3NldChOaXJ2YW5hQ29yZTo6JGRhdGFbJG5hbWVdKSkgPyBOaXJ2YW5hQ29yZTo6JGRhdGFbJG5hbWVdIDogbnVsbDsNCiAgICAgIH0NCiAgICB9ZWxzZSB7DQogICAgICBOaXJ2YW5hQ29yZTo6JGRhdGFbJG5hbWVdID0gJGRhdGE7DQogICAgfQ0KICB9DQoNCiAgLyoqDQogICAqIFNldHMgdGhlIEhUVFAgc3RhdGUgY29kZSBhbmQgdXBkYXRlcyB0aGUgc3RhdGUgb2YgdGhlIHN0YXRlLg0KICAgKg0KICAgKiBAcGFyYW0gaW50ICRjb2RlIFRoZSBIVFRQIHN0YXRlIGNvZGUgdG8gc2V0Lg0KICAgKi8NCiAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBzdGF0ZSggJGNvZGUgKSB7DQogICAgaHR0cF9yZXNwb25zZV9jb2RlKCRjb2RlKTsNCiAgICBOaXJ2YW5hQ29yZTo6JHJlc3BvbnNlWydzdGF0ZSddID0gJGNvZGU7DQogIH0NCg0KICAvKioNCiAgICogQSBkZXNjcmlwdGlvbiBvZiB0aGUgZW50aXJlIFBIUCBmdW5jdGlvbi4NCiAgICoNCiAgICogQHBhcmFtIGRhdGF0eXBlICRrZXkgZGVzY3JpcHRpb24NCiAgICogQHRocm93cyBTb21lX0V4Y2VwdGlvbl9DbGFzcyBkZXNjcmlwdGlvbiBvZiBleGNlcHRpb24NCiAgICogQHJldHVybiBTb21lX1JldHVybl9WYWx1ZQ0KICAgKi8NCiAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBtZXRob2QoJGtleSwgJHZhbHVlID0gZmFsc2UpIHsNCiAgICBpZiAoaXNzZXQoTmlydmFuYUNvcmU6OiRtZXRob2RbJGtleV0pKSB7DQogICAgICBpZiAoZW1wdHkoTmlydmFuYUNvcmU6OiRtZXRob2RbJGtleV0pKSB7DQogICAgICAgIE5pcnZhbmFDb3JlOjokbWV0aG9kWyRrZXldID0gJHZhbHVlOw0KICAgICAgfQ0KICAgICAgcmV0dXJuIE5pcnZhbmFDb3JlOjpzYW5pdGl6ZU1ldGhvZChOaXJ2YW5hQ29yZTo6JG1ldGhvZFska2V5XSk7DQogICAgfWVsc2Ugew0KICAgICAgTmlydmFuYUNvcmU6OiRtZXRob2RbJGtleV0gPSAkdmFsdWU7DQogICAgICByZXR1cm4gTmlydmFuYUNvcmU6OnNhbml0aXplTWV0aG9kKCR2YWx1ZSk7DQogICAgfQ0KICB9DQoNCiAgLyoqDQogICAqIExvYWRzIGEgc3BlY2lmaWMgdmFsdWUgZnJvbSB0aGUgTmlydmFuYUNvcmUgUkVTVCBhcnJheS4NCiAgICoNCiAgICogQHBhcmFtIGRhdGF0eXBlICRyZXF1ZXN0IGRlc2NyaXB0aW9uIG9mIHRoZSByZXF1ZXN0IHBhcmFtZXRlcg0KICAgKiBAcGFyYW0gZGF0YXR5cGUgJG5hbWUgZGVzY3JpcHRpb24gb2YgdGhlIG5hbWUgcGFyYW1ldGVyDQogICAqIEByZXR1cm4gbWl4ZWQgdGhlIHZhbHVlIGxvYWRlZCBmcm9tIHRoZSBOaXJ2YW5hQ29yZSBSRVNUIGFycmF5DQogICAqLw0KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGxvYWQoICRyZXF1ZXN0LCAkbmFtZSApIHsNCiAgICBpZiAoaXNzZXQoTmlydmFuYUNvcmU6OiRyZXN0WyRyZXF1ZXN0XVskbmFtZV0pKSB7DQogICAgICByZXR1cm4gTmlydmFuYUNvcmU6OiRyZXN0WyRyZXF1ZXN0XVskbmFtZV07DQogICAgfQ0KICB9DQoNCiAgLyoqDQogICAqIFJlZ2lzdGVycyBhIFJFU1QgZW5kcG9pbnQuDQogICAqDQogICAqIEBwYXJhbSBtaXhlZCAkcmVxdWVzdCBUaGUgdHlwZSBvZiByZXF1ZXN0IChHRVQsIFBPU1QsIGV0Yy4pLg0KICAgKiBAcGFyYW0gc3RyaW5nICRuYW1lIFRoZSBuYW1lIG9mIHRoZSBlbmRwb2ludC4NCiAgICogQHBhcmFtIGNhbGxhYmxlICRjb250cm9sbGVyIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgdGhlIGVuZHBvaW50Lg0KICAgKiBAcmV0dXJuIHZvaWQNCiAgICovDQogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gcmVzdCggJHJlcXVlc3QsICRuYW1lLCAkY29udHJvbGxlciApIHsNCiAgICBOaXJ2YW5hQ29yZTo6JHJlc3RbJHJlcXVlc3RdWyRuYW1lXSA9ICRjb250cm9sbGVyOw0KICAgIGlmIChOaXJ2YW5hQ29yZTo6JHJlcXVlc3Q9PSRyZXF1ZXN0KSB7DQogICAgICBpZiAoIWVtcHR5KE5pcnZhbmFDb3JlOjokcm91dGUpKSB7DQogICAgICAgIGlmIChpc19zaW1pbGFyX3BhdHRlcm4oJG5hbWUsIE5pcnZhbmFDb3JlOjokcm91dGUpKSB7DQogICAgICAgICAgTmlydmFuYUNvcmU6OmVycm9ySGFuZGxlcigpOw0KICAgICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uJyk7DQogICAgICAgICAgJHBhcmFtcyA9IE5pcnZhbmFDb3JlOjpleHRyYWN0SWQoJG5hbWUsIE5pcnZhbmFDb3JlOjokcm91dGUpOw0KICAgICAgICAgICRyZXNwb25zZSA9IGNhbGxfdXNlcl9mdW5jX2FycmF5KCRjb250cm9sbGVyLCAkcGFyYW1zKTsNCiAgICAgICAgICBpZiAoaXNfYXJyYXkoJHJlc3BvbnNlKSkgew0KICAgICAgICAgICAgTmlydmFuYUNvcmU6OiRyZXNwb25zZVsnZGF0YSddID0gJHJlc3BvbnNlOw0KICAgICAgICAgICAgZWNobyBqc29uX2VuY29kZShOaXJ2YW5hQ29yZTo6JHJlc3BvbnNlLCBKU09OX1BSRVRUWV9QUklOVCB8IEpTT05fVU5FU0NBUEVEX1VOSUNPREUgfCBKU09OX1VORVNDQVBFRF9TTEFTSEVTKTsNCiAgICAgICAgICAgIGRpZTsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogIH0NCg0KICAvKioNCiAgICogTWFuYWdlcyBzZXNzaW9uLWJhc2VkIHN0b3JhZ2UgZm9yIGEgZ2l2ZW4gc3RvcmUgbmFtZS4NCiAgICoNCiAgICogSW5pdGlhbGl6ZXMgYSBzZXNzaW9uIHN0b3JlIGlmIGl0IGRvZXMgbm90IGV4aXN0IGFuZCBwcm92aWRlcyBtZXRob2RzDQogICAqIHRvIHNldCwgY2hlY2ssIHJldHJpZXZlLCBkZWxldGUsIGFuZCBjbGVhciBkYXRhIHdpdGhpbiB0aGUgc2Vzc2lvbiBzdG9yZS4NCiAgICoNCiAgICogQHBhcmFtIHN0cmluZyAkc3RvcmVOYW1lIFRoZSBuYW1lIG9mIHRoZSBzZXNzaW9uIHN0b3JlIHRvIG1hbmFnZS4NCiAgICogQHJldHVybiBzdHJpbmcgVGhlIGNsYXNzIG5hbWUgb2YgdGhlIGR5bmFtaWNhbGx5IGNyZWF0ZWQgc3RvcmUuDQogICAqLw0KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHN0b3JlKCAkc3RvcmVOYW1lICkgew0KICAgICRzdG9yZSA9IG5ldyBjbGFzcyB7DQogICAgICBwdWJsaWMgc3RhdGljICRuYW1lID0gIiI7DQogICAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGluaXQoICRuYW1lICkgew0KICAgICAgICBzZWxmOjokbmFtZSA9ICRuYW1lOw0KICAgICAgICBpZiAoIWlzc2V0KCRfU0VTU0lPTltzZWxmOjokbmFtZV0pKSB7DQogICAgICAgICAgJF9TRVNTSU9OW3NlbGY6OiRuYW1lXSA9IFtdOw0KICAgICAgICB9DQogICAgICB9DQogICAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHNldCgkbmFtZSwgJGRhdGEpIHsNCiAgICAgICAgJF9TRVNTSU9OW3NlbGY6OiRuYW1lXVskbmFtZV0gPSAkZGF0YTsNCiAgICAgIH0NCiAgICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gaGFzKCRuYW1lKSB7DQogICAgICAgIHJldHVybiBpc3NldCgkX1NFU1NJT05bc2VsZjo6JG5hbWVdWyRuYW1lXSk7DQogICAgICB9DQogICAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGdldCgkbmFtZT1udWxsKSB7DQogICAgICAgIGlmIChlbXB0eSgkbmFtZSkpIHsNCiAgICAgICAgICByZXR1cm4gJF9TRVNTSU9OW3NlbGY6OiRuYW1lXTsNCiAgICAgICAgfWVsc2Ugew0KICAgICAgICAgIHJldHVybiAkX1NFU1NJT05bc2VsZjo6JG5hbWVdWyRuYW1lXTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBkZWxldGUoJG5hbWUpIHsNCiAgICAgICAgdW5zZXQoJF9TRVNTSU9OW3NlbGY6OiRuYW1lXVskbmFtZV0pOw0KICAgICAgfQ0KICAgICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBjbGVhcigpIHsNCiAgICAgICAgdW5zZXQoJF9TRVNTSU9OW3NlbGY6OiRuYW1lXSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgfQ0KICAgIH07DQogICAgJHN0b3JlOjppbml0KCRzdG9yZU5hbWUpOw0KDQogICAgcmV0dXJuICRzdG9yZTo6Y2xhc3M7DQoNCiAgICAvLyBvbGQgdmVyc2lvbg0KICAgIC8vIGlmIChlbXB0eSgkZGF0YSkpIHsNCiAgICAvLyAgIHJldHVybiBOaXJ2YW5hQ29yZTo6JHN0b3JlWyRuYW1lXTsNCiAgICAvLyB9ZWxzZSB7DQogICAgLy8gICBOaXJ2YW5hQ29yZTo6JHN0b3JlWyRuYW1lXSA9IG5ldyBOaXJ2YW5hU3RvcmUoJG5hbWUsICRkYXRhKTsNCiAgICAvLyB9DQogIH0NCg0KfQpOaXJ2YW5hOjplbnZpcm9ubWVudChbDQogICdkYXRhJz0+IFsNCiAgICAnRUNIT0VTX1JPT1QnPT4gcmVhbHBhdGgoX19ESVJfXyAuICcvLmVjaG9lcy8nKSwNCiAgICAnRUNIT0VTJz0+IHJlYWxwYXRoKF9fRElSX18gLiAnLy5lY2hvZXMvcnVuZS5waHAvJyksDQogIF0sDQogICJjb25maWd1cmUiPT4gWw0KICAgICJkZXZlbG9wbWVudCI9PiB0cnVlLA0KICAgICJiYXNldXJsIiA9PiAoaXNzZXQoJF9TRVJWRVJbJ0hUVFBTJ10pICYmICRfU0VSVkVSWydIVFRQUyddID09PSAnb24nID8gImh0dHBzIiA6ICJodHRwIikgLiAiOi8vIiAuICRfU0VSVkVSWydIVFRQX0hPU1QnXSAuIHJ0cmltKGRpcm5hbWUoJF9TRVJWRVJbJ1NDUklQVF9OQU1FJ10pLCAnL1xcJykgLiAnLycNCiAgXQ0KXSk7DQoNCg0KDQpOaXJ2YW5hOjpyZXN0KCdHRVQnLCAnYXBpL2lzX2hhc19lY2hvZXMnLCBmdW5jdGlvbigpIHsNCiAgaWYgKGZpbGVfZXhpc3RzKE5pcnZhbmE6OmRhdGEoJ0VDSE9FU19ST09UJykpKSB7DQogICAgcmV0dXJuIFt0cnVlXTsNCiAgfWVsc2Ugew0KICAgIHJldHVybiBbZmFsc2VdOw0KICB9DQp9KTsNCg0KTmlydmFuYTo6cmVzdCgnR0VUJywgJ2FwaS9lY2hvZXNfbGlzdCcsIGZ1bmN0aW9uKCkgew0KICAkdGFyZ2V0ID0gZ2xvYihOaXJ2YW5hOjpkYXRhKCdFQ0hPRVNfUk9PVCcpIC4gJy8qJyk7DQogICRyZXN1bHQgPSBbXTsNCiAgZm9yZWFjaCAoJHRhcmdldCBhcyAkcm93KSB7DQogICAgJHJlc3VsdFtdID0gYmFzZW5hbWUoJHJvdyk7DQogIH0NCiAgcmV0dXJuICRyZXN1bHQ7DQp9KTsNCg0KDQpOaXJ2YW5hOjpyZXN0KCdQT1NUJywgJ2FwaS9tYWluL21haW5zJywgZnVuY3Rpb24oKSB7DQogICRlY2hvZXMgPSBOaXJ2YW5hOjptZXRob2QoJ2VjaG9lcycsIGZhbHNlKTsNCiAgDQogIGlmICgkZWNob2VzKSB7DQogICAgJHRhcmdldCA9IE5pcnZhbmE6OmRhdGEoJ0VDSE9FU19ST09UJykgLiAnLycgLiAkZWNob2VzIC4gJy9ydW5lLmpzb24nOw0KICAgICRzb3VyY2UgPSBmaWxlX2dldF9jb250ZW50cygkdGFyZ2V0KTsNCiAgICByZXR1cm4ganNvbl9kZWNvZGUoJHNvdXJjZSwgdHJ1ZSk7DQogIH1lbHNlIHsNCiAgICByZXR1cm4gW2ZhbHNlXTsNCiAgfQ0KfSk7DQoNCg0KTmlydmFuYTo6cmVzdCgnUE9TVCcsICdhcGkvbWFpbi9jYXN0JywgZnVuY3Rpb24oKSB7DQogICRlY2hvZXMgPSBOaXJ2YW5hOjptZXRob2QoJ2VjaG9lcycsIGZhbHNlKTsNCiAgJHJlcG8gPSBOaXJ2YW5hOjptZXRob2QoJ3JlcG8nLCBmYWxzZSk7DQogICRmaWxlID0gTmlydmFuYTo6bWV0aG9kKCdmaWxlJywgZmFsc2UpOw0KICAkYXJnID0gTmlydmFuYTo6bWV0aG9kKCdhcmcnLCBmYWxzZSk7DQogICRhcmcgPSBzdHJfcmVwbGFjZSgkZmlsZS4nICcsICcnLCAkYXJnKTsNCiAgJGFyZyA9IHN0cl9yZXBsYWNlKCdwaHAgJywgJycsICRhcmcpOw0KICAkY2FzdCA9ICJwaHAgJGZpbGUgJGFyZyI7DQogIA0KICBpZiAoISRlY2hvZXMpIHsNCiAgICByZXR1cm4gWyd3YXJuaW5nJz0+ICdObyBlY2hvZXMgc2VsZWN0ZWQnXTsNCiAgfQ0KDQogICRjb21tYW5kID0gJ3N0YXJ0IGNtZCAvayAiJyAuICRjYXN0IC4gJyInOw0KICBwY2xvc2UocG9wZW4oJGNvbW1hbmQsICdyJykpOw0KDQogIHJldHVybiBbJGNhc3RdOw0KfSk7DQoNCk5pcnZhbmE6OnJlc3QoJ1BPU1QnLCAnYXBpL21haW4vc2hhcmRfbGlzdCcsIGZ1bmN0aW9uKCkgew0KICAkZWNob2VzID0gTmlydmFuYTo6bWV0aG9kKCdlY2hvZXMnLCBmYWxzZSk7DQogIGlmICghJGVjaG9lcykgew0KICAgIHJldHVybiBbJ3dhcm5pbmcnPT4gJ05vIGVjaG9lcyBzZWxlY3RlZCddOw0KICB9DQogICRnbG9iID0gZ2xvYihOaXJ2YW5hOjpkYXRhKCdFQ0hPRVNfUk9PVCcpIC4gJy8nIC4gJGVjaG9lcyAuICcvc2hhcmRzLyonKTsNCiAgJHJlc3VsdCA9IFtdOw0KICBmb3JlYWNoICgkZ2xvYiBhcyAkcm93KSB7DQogICAgJHJlc3VsdFtdID0gcGF0aGluZm8oJHJvdyk7DQogIH0NCiAgcmV0dXJuIFsgJ3Jlc3VsdCc9PiAkcmVzdWx0IF07DQp9KTsNCk5pcnZhbmE6OnJlc3QoJ1BPU1QnLCAnYXBpL21haW4vc2hhcmRfcmVtb3ZlJywgZnVuY3Rpb24oKSB7DQogICRlY2hvZXMgPSBOaXJ2YW5hOjptZXRob2QoJ2VjaG9lcycsIGZhbHNlKTsNCiAgaWYgKCEkZWNob2VzKSB7DQogICAgcmV0dXJuIFsnd2FybmluZyc9PiAnTm8gZWNob2VzIHNlbGVjdGVkJ107DQogIH0NCiAgJGJhc2VuYW1lID0gTmlydmFuYTo6bWV0aG9kKCdiYXNlbmFtZScsIGZhbHNlKTsNCiAgJHRhcmdldCA9IE5pcnZhbmE6OmRhdGEoJ0VDSE9FU19ST09UJykgLiAnLycgLiAkZWNob2VzIC4gJy9zaGFyZHMvJyAuICRiYXNlbmFtZTsNCiAgdW5saW5rKCR0YXJnZXQpOw0KICByZXR1cm4gWyB0cnVlIF07DQp9KTsNCg0KDQpOaXJ2YW5hOjpyZXN0KCdQT1NUJywgJ2FwaS9iaW5kcnVuZS9lbmdyYXZlX2dldCcsIGZ1bmN0aW9uKCkgew0KICAkZWNob2VzID0gTmlydmFuYTo6bWV0aG9kKCdlY2hvZXMnLCBmYWxzZSk7DQogICRyZXBvID0gTmlydmFuYTo6bWV0aG9kKCdyZXBvJywgZmFsc2UpOw0KICAkbmFtZSA9IE5pcnZhbmE6Om1ldGhvZCgnbmFtZScsIGZhbHNlKTsNCg0KICBpZiAoISRlY2hvZXMpIHsNCiAgICByZXR1cm4gWyd3YXJuaW5nJz0+ICdObyBlY2hvZXMgc2VsZWN0ZWQnXTsNCiAgfQ0KDQogICR0YXJnZXQgPSBnbG9iKCRyZXBvIC4gJy8uYmluZHJ1bmUvJyAuICRuYW1lIC4gJy8qJyk7DQogICRyZXN1bHQgPSBbXTsNCiAgZm9yZWFjaCAoJHRhcmdldCBhcyAkcm93KSB7DQogICAgJG5hbWUgPSBiYXNlbmFtZSgkcm93KTsNCiAgICAkbmFtZSA9IHN0cl9yZXBsYWNlKCcucGhwJywgJycsICRuYW1lKTsNCiAgICAkcmVzdWx0WyBzdHJ0b2xvd2VyKCRuYW1lKSBdID0gZmlsZV9nZXRfY29udGVudHMoJHJvdyk7DQogIH0NCiAgcmV0dXJuICRyZXN1bHQ7DQp9KTsNCg0KTmlydmFuYTo6cmVzdCgnUE9TVCcsICdhcGkvYmluZHJ1bmUvZW5ncmF2ZV9saXN0JywgZnVuY3Rpb24oKSB7DQogICRlY2hvZXMgPSBOaXJ2YW5hOjptZXRob2QoJ2VjaG9lcycsIGZhbHNlKTsNCiAgJHJlcG8gPSBOaXJ2YW5hOjptZXRob2QoJ3JlcG8nLCBmYWxzZSk7DQogIGlmICghJGVjaG9lcykgew0KICAgIHJldHVybiBbJ3dhcm5pbmcnPT4gJ05vIGVjaG9lcyBzZWxlY3RlZCddOw0KICB9DQogICR0YXJnZXQgPSBnbG9iKCRyZXBvIC4gJy8uYmluZHJ1bmUvKicpOw0KICAkcmVzdWx0ID0gW107DQogIGZvcmVhY2ggKCR0YXJnZXQgYXMgJHJvdykgew0KICAgICRyZXN1bHRbXSA9IGJhc2VuYW1lKCRyb3cpOw0KICB9DQogIHJldHVybiAkcmVzdWx0Ow0KfSk7DQoNCk5pcnZhbmE6OnJlc3QoJ1BPU1QnLCAnYXBpL2Nhc3RfZXhpdCcsIGZ1bmN0aW9uKCkgew0KICAkcmVwbyA9IE5pcnZhbmE6Om1ldGhvZCgncmVwbycsIGZhbHNlKTsNCiAgJGZpbGUgPSBOaXJ2YW5hOjptZXRob2QoJ2ZpbGUnLCBmYWxzZSk7DQogICRhcmcgPSBOaXJ2YW5hOjptZXRob2QoJ2FyZycsIGZhbHNlKTsNCiAgJGFyZyA9IHN0cl9yZXBsYWNlKCRmaWxlLicgJywgJycsICRhcmcpOw0KICAkYXJnID0gc3RyX3JlcGxhY2UoJ3BocCAnLCAnJywgJGFyZyk7DQogICRjYXN0ID0gInBocCAkZmlsZSAkYXJnIjsNCiAgDQogICRjb21tYW5kID0gJ3N0YXJ0IGNtZCAvYyAiJyAuICRjYXN0IC4gJyInOw0KICBwY2xvc2UocG9wZW4oJGNvbW1hbmQsICdyJykpOw0KDQogIHJldHVybiBbJGNhc3RdOw0KfSk7DQoNCk5pcnZhbmE6OnJlc3QoJ1BPU1QnLCAnYXBpL2VuZ3JhdmVfc2F2aW5nJywgZnVuY3Rpb24oKSB7DQogICRyZXBvID0gTmlydmFuYTo6bWV0aG9kKCdyZXBvJywgZmFsc2UpOw0KICAkbmFtZSA9IE5pcnZhbmE6Om1ldGhvZCgnbmFtZScsIGZhbHNlKTsNCiAgJGJpbmRydW5lcyA9IGdsb2IoJHJlcG8gLiAnLy5iaW5kcnVuZS8qJyk7DQogICRzb3VyY2VzID0gTmlydmFuYTo6bWV0aG9kKCdzb3VyY2UnKTsNCiAgZm9yZWFjaCAoJHNvdXJjZXMgYXMgJHJ1bmU9PiR2YWx1ZSkgew0KICAgICRydW5lID0gdWNmaXJzdChzdHJ0b2xvd2VyKCRydW5lKSk7DQogICAgZmlsZV9wdXRfY29udGVudHMoJHJlcG8gLiAnLy5iaW5kcnVuZS8nLiRuYW1lLicvJy4kcnVuZS4nLnBocCcsICR2YWx1ZSk7DQogIH0NCiAgcmV0dXJuIFt0cnVlXTsNCn0pOw0KDQpOaXJ2YW5hOjpyZXN0KCdQT1NUJywgJ2FwaS9tYWluZmlsZV9zYXZpbmcnLCBmdW5jdGlvbigpIHsNCiAgJHJlcG8gPSBOaXJ2YW5hOjptZXRob2QoJ3JlcG8nLCBmYWxzZSk7DQogICRmaWxlID0gTmlydmFuYTo6bWV0aG9kKCdmaWxlJywgZmFsc2UpOw0KDQogIGZpbGVfcHV0X2NvbnRlbnRzKCRyZXBvIC4gJy8nIC4gJGZpbGUsIE5pcnZhbmE6Om1ldGhvZCgnc291cmNlJylbJ3JhdyddKTsNCiAgcmV0dXJuIFt0cnVlXTsNCn0pOw0KDQoNCg0KDQoNCg0KTmlydmFuYTo6cmVzdCgnUE9TVCcsICdhcGkvcmViYXNlX2FydGVmYWN0JywgZnVuY3Rpb24oKSB7DQogICRlY2hvZXMgPSBOaXJ2YW5hOjptZXRob2QoJ2VjaG9lcycsIGZhbHNlKTsNCiAgJHJlcG8gPSBOaXJ2YW5hOjptZXRob2QoJ3JlcG8nLCBmYWxzZSk7DQogICRmaWxlID0gTmlydmFuYTo6bWV0aG9kKCdmaWxlJywgZmFsc2UpOw0KDQogIGlmICghJGVjaG9lcykgew0KICAgIHJldHVybiBbJ3dhcm5pbmcnPT4gJ05vIGVjaG9lcyBzZWxlY3RlZCddOw0KICB9DQoNCiAgJHVwbG9hZCA9ICRfRklMRVNbJ3VwbG9hZCddWyd0bXBfbmFtZSddOw0KICBpZiAoZmlsZV9leGlzdHMoJHJlcG8gLiAnLycgLiAkZmlsZSAuICcucnVuZScpKSB7DQogICAgdW5saW5rKCRyZXBvIC4gJy8nIC4gJGZpbGUgLiAnLnJ1bmUnKTsNCiAgfQ0KDQogIG1vdmVfdXBsb2FkZWRfZmlsZSgkdXBsb2FkLCAkcmVwbyAuICcvJyAuICRmaWxlIC4gJy5ydW5lJyk7DQogIHJldHVybiBbIHRydWUgXTsNCn0pOw0KDQpOaXJ2YW5hOjpyZXN0KCdQT1NUJywgJ2FwaS9tYWluX2ZpbGVfc291cmNlJywgZnVuY3Rpb24oKSB7DQogICRlY2hvZXMgPSBOaXJ2YW5hOjptZXRob2QoJ2VjaG9lcycsIGZhbHNlKTsNCiAgJHJlcG8gPSBOaXJ2YW5hOjptZXRob2QoJ3JlcG8nLCBmYWxzZSk7DQogICRmaWxlID0gTmlydmFuYTo6bWV0aG9kKCdmaWxlJywgZmFsc2UpOw0KDQogIGlmICghJGVjaG9lcykgew0KICAgIHJldHVybiBbJ3dhcm5pbmcnPT4gJ05vIGVjaG9lcyBzZWxlY3RlZCddOw0KICB9DQoNCiAgJHRhcmdldCA9ICRyZXBvIC4gJy8nIC4gJGZpbGU7DQogICRzb3VyY2UgPSBmaWxlX2dldF9jb250ZW50cygkdGFyZ2V0KTsNCiAgcmV0dXJuIFsnc291cmNlJz0+ICRzb3VyY2UgXTsNCn0pOw0KDQoNCk5pcnZhbmE6OnJlc3QoJ1BPU1QnLCAnYXBpL2xvYWRfZ3JpbW9pcmUnLCBmdW5jdGlvbigpIHsNCiAgJGVjaG9lcyA9IE5pcnZhbmE6Om1ldGhvZCgnZWNob2VzJywgZmFsc2UpOw0KICBpZiAoISRlY2hvZXMpIHsNCiAgICByZXR1cm4gWyd3YXJuaW5nJz0+ICdObyBlY2hvZXMgc2VsZWN0ZWQnXTsNCiAgfQ0KICAkdGFyZ2V0ID0gTmlydmFuYTo6ZGF0YSgnRUNIT0VTX1JPT1QnKSAuICcvJyAuICRlY2hvZXMgLiAnL2dyaW1vaXJlLmpzb24nOw0KICBpZiAoZmlsZV9leGlzdHMoJHRhcmdldCkpIHsNCiAgICAkc291cmNlID0gZmlsZV9nZXRfY29udGVudHMoJHRhcmdldCk7DQogICAgJHNvdXJjZSA9IGpzb25fZGVjb2RlKCRzb3VyY2UsIHRydWUpOw0KICANCiAgICByZXR1cm4gJHNvdXJjZTsNCiAgfWVsc2Ugew0KICAgIHJldHVybiBbJ3N0YXRlJz0+ZmFsc2VdOw0KICB9DQp9KTsNCg0KDQpOaXJ2YW5hOjpyZXN0KCdQT1NUJywgJ2FwaS9zeW5jaHJvbml6ZScsIGZ1bmN0aW9uKCkgew0KICAkZWNob2VzID0gTmlydmFuYTo6bWV0aG9kKCdlY2hvZXMnLCBmYWxzZSk7DQogIGlmICghJGVjaG9lcykgew0KICAgIHJldHVybiBbJ3dhcm5pbmcnPT4gJ05vIGVjaG9lcyBzZWxlY3RlZCddOw0KICB9DQogICRpbnRlcnZhbERhdGEgPSAoZmxvYXQpIE5pcnZhbmE6Om1ldGhvZCgnaW50ZXJ2YWwnKTsNCiAgJGludGVydmFsID0gKCRpbnRlcnZhbERhdGEgLzEwMDApICsgMC41Ow0KICAkdGFyZ2V0ID0gIE5pcnZhbmE6OmRhdGEoJ0VDSE9FU19ST09UJykgLiAnLycgLiAkZWNob2VzIC4gJy9ydW5lLmpzb24nOw0KDQogIGhlYWRlcignQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluJyk7DQogIGlmICh0aW1lKCkgLSBmaWxlbXRpbWUoJHRhcmdldCkgPD0gJGludGVydmFsKSB7DQogICAgZXhpdCgndHJ1ZScpOw0KICB9ZWxzZSB7DQogICAgZXhpdCgnZmFsc2UnKTsNCiAgfQ0KfSk7';}

function rune__68686d6a1e81a(){$CONSTRUCT=rune__encryption_68686d6a1e81a(rune__construct_68686d6a1e81a(),false);$CONSTRUCT=rune__prefixing_68686d6a1e81a($CONSTRUCT,'HTML-HEAD',rune__encryption_68686d6a1e81a(rune__HTML_HEAD_68686d6a1e81a(),false));$CONSTRUCT=rune__prefixing_68686d6a1e81a($CONSTRUCT,'HTML',rune__encryption_68686d6a1e81a(rune__HTML_68686d6a1e81a(),false));$CONSTRUCT=rune__prefixing_68686d6a1e81a($CONSTRUCT,'CSS',rune__encryption_68686d6a1e81a(rune__CSS_68686d6a1e81a(),false));$CONSTRUCT=rune__prefixing_68686d6a1e81a($CONSTRUCT,'JS',rune__encryption_68686d6a1e81a(rune__JS_68686d6a1e81a(),false));$CONSTRUCT=rune__prefixing_68686d6a1e81a($CONSTRUCT,'PHP',rune__encryption_68686d6a1e81a(rune__PHP_68686d6a1e81a(),false));eval("?>".$CONSTRUCT."<?php");}

rune__68686d6a1e81a();
